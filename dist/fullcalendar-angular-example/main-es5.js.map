{"version":3,"sources":["webpack:///src/$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/event-utils.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","calendarVisible","calendarOptions","headerToolbar","left","center","right","initialView","initialEvents","weekends","editable","selectable","selectMirror","dayMaxEvents","select","handleDateSelect","bind","eventClick","handleEventClick","eventsSet","handleEvents","currentEvents","selectInfo","title","prompt","calendarApi","view","calendar","unselect","addEvent","start","startStr","end","endStr","allDay","clickInfo","confirm","event","remove","events","handleCalendarToggle","handleWeekendsToggle","selector","templateUrl","styleUrls","registerPlugins","AppModule","declarations","imports","providers","bootstrap","eventGuid","TODAY_STR","Date","toISOString","replace","INITIAL_EVENTS","createEventId","String","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\nimport { CalendarOptions, DateSelectArg, EventClickArg, EventApi } from '@fullcalendar/angular';\nimport { INITIAL_EVENTS, createEventId } from './event-utils';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n\n  calendarVisible = true;\n  calendarOptions: CalendarOptions = {\n    headerToolbar: {\n      left: 'prev,next today',\n      center: 'title',\n      right: 'dayGridMonth,timeGridWeek,timeGridDay,listWeek'\n    },\n    initialView: 'dayGridMonth',\n    initialEvents: INITIAL_EVENTS, // alternatively, use the `events` setting to fetch from a feed\n    weekends: true,\n    editable: true,\n    selectable: true,\n    selectMirror: true,\n    dayMaxEvents: true,\n    select: this.handleDateSelect.bind(this),\n    eventClick: this.handleEventClick.bind(this),\n    eventsSet: this.handleEvents.bind(this)\n    /* you can update a remote database when these fire:\n    eventAdd:\n    eventChange:\n    eventRemove:\n    */\n  };\n  currentEvents: EventApi[] = [];\n\n  handleCalendarToggle() {\n    this.calendarVisible = !this.calendarVisible;\n  }\n\n  handleWeekendsToggle() {\n    const { calendarOptions } = this;\n    calendarOptions.weekends = !calendarOptions.weekends;\n  }\n\n  handleDateSelect(selectInfo: DateSelectArg) {\n    const title = prompt('Please enter a new title for your event');\n    const calendarApi = selectInfo.view.calendar;\n\n    calendarApi.unselect(); // clear date selection\n\n    if (title) {\n      calendarApi.addEvent({\n        id: createEventId(),\n        title,\n        start: selectInfo.startStr,\n        end: selectInfo.endStr,\n        allDay: selectInfo.allDay\n      });\n    }\n  }\n\n  handleEventClick(clickInfo: EventClickArg) {\n    if (confirm(`Are you sure you want to delete the event '${clickInfo.event.title}'`)) {\n      clickInfo.event.remove();\n    }\n  }\n\n  handleEvents(events: EventApi[]) {\n    this.currentEvents = events;\n  }\n\n}\n","\n<div class='demo-app'>\n\n  <div class='demo-app-sidebar'>\n    <div class='demo-app-sidebar-section'>\n      <h2>Instructions</h2>\n      <ul>\n        <li>Select dates and you will be prompted to create a new event</li>\n        <li>Drag, drop, and resize events</li>\n        <li>Click an event to delete it</li>\n      </ul>\n    </div>\n    <div class='demo-app-sidebar-section'>\n      <label>\n        <input\n          type='checkbox'\n          [checked]='calendarVisible'\n          (change)='handleCalendarToggle()'\n        />\n        toggle whole calendar\n      </label>\n    </div>\n    <div class='demo-app-sidebar-section'>\n      <label>\n        <input\n          type='checkbox'\n          [checked]='calendarOptions.weekends'\n          (change)='handleWeekendsToggle()'\n        />\n        toggle weekends\n      </label>\n    </div>\n    <div class='demo-app-sidebar-section'>\n      <h2>All Events ({{currentEvents.length}})</h2>\n      <ul>\n        <li *ngFor='let event of currentEvents'>\n          <b>{{event.startStr}}</b>\n          <i>{{event.title}}</i>\n        </li>\n      </ul>\n    </div>\n  </div>\n\n  <div class='demo-app-main'>\n    <full-calendar\n      *ngIf='calendarVisible'\n      [options]='calendarOptions'\n    ></full-calendar>\n  </div>\n\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FullCalendarModule } from '@fullcalendar/angular';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport listPlugin from '@fullcalendar/list';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport { AppComponent } from './app.component';\n\nFullCalendarModule.registerPlugins([\n  dayGridPlugin,\n  timeGridPlugin,\n  listPlugin,\n  interactionPlugin\n])\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FullCalendarModule // import the FullCalendar module! will make the FullCalendar component available\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { EventInput } from '@fullcalendar/angular';\n\nlet eventGuid = 0;\nconst TODAY_STR = new Date().toISOString().replace(/T.*$/, ''); // YYYY-MM-DD of today\n\nexport const INITIAL_EVENTS: EventInput[] = [\n  {\n    id: createEventId(),\n    title: 'All-day event',\n    start: TODAY_STR\n  },\n  {\n    id: createEventId(),\n    title: 'Timed event',\n    start: TODAY_STR + 'T12:00:00'\n  }\n];\n\nexport function createEventId() {\n  return String(eventGuid++);\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","\n// hack to get demo working in codepen\n// https://github.com/codesandbox/codesandbox-client/issues/2634#issuecomment-598104535\nimport 'core-js/proposals/reflect-metadata';\n\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}