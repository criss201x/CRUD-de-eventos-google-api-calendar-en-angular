{"version":3,"sources":["./src/$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/event-utils.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0C;AAEoB;;;;;ICiCtD,qEACE;IAAA,oEAAG;IAAA,uDAAkB;IAAA,4DAAI;IACzB,oEAAG;IAAA,uDAAe;IAAA,4DAAI;IACxB,4DAAK;;;IAFA,0DAAkB;IAAlB,kFAAkB;IAClB,0DAAe;IAAf,+EAAe;;;IAOxB,8EAGiB;;;IADf,2FAA2B;;ADrC1B,MAAM,YAAY;IALzB;QAOE,oBAAe,GAAG,IAAI,CAAC;QACvB,oBAAe,GAAoB;YACjC,aAAa,EAAE;gBACb,IAAI,EAAE,iBAAiB;gBACvB,MAAM,EAAE,OAAO;gBACf,KAAK,EAAE,gDAAgD;aACxD;YACD,WAAW,EAAE,cAAc;YAC3B,aAAa,EAAE,2DAAc;YAC7B,QAAQ,EAAE,IAAI;YACd,QAAQ,EAAE,IAAI;YACd,UAAU,EAAE,IAAI;YAChB,YAAY,EAAE,IAAI;YAClB,YAAY,EAAE,IAAI;YAClB,MAAM,EAAE,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC;YACxC,UAAU,EAAE,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC;YAC5C,SAAS,EAAE,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC;YACvC;;;;cAIE;SACH,CAAC;QACF,kBAAa,GAAe,EAAE,CAAC;KAsChC;IApCC,oBAAoB;QAClB,IAAI,CAAC,eAAe,GAAG,CAAC,IAAI,CAAC,eAAe,CAAC;IAC/C,CAAC;IAED,oBAAoB;QAClB,MAAM,EAAE,eAAe,EAAE,GAAG,IAAI,CAAC;QACjC,eAAe,CAAC,QAAQ,GAAG,CAAC,eAAe,CAAC,QAAQ,CAAC;IACvD,CAAC;IAED,gBAAgB,CAAC,UAAyB;QACxC,MAAM,KAAK,GAAG,MAAM,CAAC,yCAAyC,CAAC,CAAC;QAChE,MAAM,WAAW,GAAG,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC;QAE7C,WAAW,CAAC,QAAQ,EAAE,CAAC,CAAC,uBAAuB;QAE/C,IAAI,KAAK,EAAE;YACT,WAAW,CAAC,QAAQ,CAAC;gBACnB,EAAE,EAAE,kEAAa,EAAE;gBACnB,KAAK;gBACL,KAAK,EAAE,UAAU,CAAC,QAAQ;gBAC1B,GAAG,EAAE,UAAU,CAAC,MAAM;gBACtB,MAAM,EAAE,UAAU,CAAC,MAAM;aAC1B,CAAC,CAAC;SACJ;IACH,CAAC;IAED,gBAAgB,CAAC,SAAwB;QACvC,IAAI,OAAO,CAAC,8CAA8C,SAAS,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,EAAE;YACnF,SAAS,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC;SAC1B;IACH,CAAC;IAED,YAAY,CAAC,MAAkB;QAC7B,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC;IAC9B,CAAC;;wEA7DU,YAAY;4FAAZ,YAAY;QCRzB,yEAEE;QAAA,yEACE;QAAA,yEACE;QAAA,qEAAI;QAAA,uEAAY;QAAA,4DAAK;QACrB,qEACE;QAAA,qEAAI;QAAA,sHAA2D;QAAA,4DAAK;QACpE,qEAAI;QAAA,wFAA6B;QAAA,4DAAK;QACtC,sEAAI;QAAA,uFAA2B;QAAA,4DAAK;QACtC,4DAAK;QACP,4DAAM;QACN,0EACE;QAAA,yEACE;QAAA,4EAKA;QAFE,sIAAU,0BAAsB,IAAC;QAHnC,4DAKA;QAAA,mFACF;QAAA,4DAAQ;QACV,4DAAM;QACN,0EACE;QAAA,yEACE;QAAA,4EAKA;QAFE,sIAAU,0BAAsB,IAAC;QAHnC,4DAKA;QAAA,6EACF;QAAA,4DAAQ;QACV,4DAAM;QACN,0EACE;QAAA,sEAAI;QAAA,wDAAqC;QAAA,4DAAK;QAC9C,sEACE;QAAA,wGACE;QAGJ,4DAAK;QACP,4DAAM;QACR,4DAAM;QAEN,0EACE;QAAA,8HAGC;QACH,4DAAM;QAER,4DAAM;;QAlCI,2DAA2B;QAA3B,wFAA2B;QAU3B,0DAAoC;QAApC,iGAAoC;QAOpC,0DAAqC;QAArC,+GAAqC;QAEnC,0DAAmC;QAAnC,sFAAmC;QAUzC,0DAAuB;QAAvB,qFAAuB;;6FDpChB,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;;;;;;;;;;;;;;AERD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AACkB;AACT;AACE;AACR;AACc;AACX;;AAE/C,wEAAkB,CAAC,eAAe,CAAC;IACjC,6DAAa;IACb,8DAAc;IACd,0DAAU;IACV,iEAAiB;CAClB,CAAC;AAaK,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,EAAE,YAJJ;YACP,uEAAa;YACb,wEAAkB,CAAC,iFAAiF;SACrG;mIAIU,SAAS,mBATlB,2DAAY,aAGZ,uEAAa;QACb,wEAAkB,CAAC,iFAAiF;;6FAK3F,SAAS;cAXrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;iBACb;gBACD,OAAO,EAAE;oBACP,uEAAa;oBACb,wEAAkB,CAAC,iFAAiF;iBACrG;gBACD,SAAS,EAAE,EAAE;gBACb,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;ACxBD;AAAA;AAAA;AAAA,IAAI,SAAS,GAAG,CAAC,CAAC;AAClB,MAAM,SAAS,GAAG,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC,CAAC,sBAAsB;AAE/E,MAAM,cAAc,GAAiB;IAC1C;QACE,EAAE,EAAE,aAAa,EAAE;QACnB,KAAK,EAAE,eAAe;QACtB,KAAK,EAAE,SAAS;KACjB;IACD;QACE,EAAE,EAAE,aAAa,EAAE;QACnB,KAAK,EAAE,aAAa;QACpB,KAAK,EAAE,SAAS,GAAG,WAAW;KAC/B;CACF,CAAC;AAEK,SAAS,aAAa;IAC3B,OAAO,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC;AAC7B,CAAC;;;;;;;;;;;;;ACpBD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACdnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAAsC;AACtC,uFAAuF;AAC3C;AAEG;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\nimport { CalendarOptions, DateSelectArg, EventClickArg, EventApi } from '@fullcalendar/angular';\nimport { INITIAL_EVENTS, createEventId } from './event-utils';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n\n  calendarVisible = true;\n  calendarOptions: CalendarOptions = {\n    headerToolbar: {\n      left: 'prev,next today',\n      center: 'title',\n      right: 'dayGridMonth,timeGridWeek,timeGridDay,listWeek'\n    },\n    initialView: 'dayGridMonth',\n    initialEvents: INITIAL_EVENTS, // alternatively, use the `events` setting to fetch from a feed\n    weekends: true,\n    editable: true,\n    selectable: true,\n    selectMirror: true,\n    dayMaxEvents: true,\n    select: this.handleDateSelect.bind(this),\n    eventClick: this.handleEventClick.bind(this),\n    eventsSet: this.handleEvents.bind(this)\n    /* you can update a remote database when these fire:\n    eventAdd:\n    eventChange:\n    eventRemove:\n    */\n  };\n  currentEvents: EventApi[] = [];\n\n  handleCalendarToggle() {\n    this.calendarVisible = !this.calendarVisible;\n  }\n\n  handleWeekendsToggle() {\n    const { calendarOptions } = this;\n    calendarOptions.weekends = !calendarOptions.weekends;\n  }\n\n  handleDateSelect(selectInfo: DateSelectArg) {\n    const title = prompt('Please enter a new title for your event');\n    const calendarApi = selectInfo.view.calendar;\n\n    calendarApi.unselect(); // clear date selection\n\n    if (title) {\n      calendarApi.addEvent({\n        id: createEventId(),\n        title,\n        start: selectInfo.startStr,\n        end: selectInfo.endStr,\n        allDay: selectInfo.allDay\n      });\n    }\n  }\n\n  handleEventClick(clickInfo: EventClickArg) {\n    if (confirm(`Are you sure you want to delete the event '${clickInfo.event.title}'`)) {\n      clickInfo.event.remove();\n    }\n  }\n\n  handleEvents(events: EventApi[]) {\n    this.currentEvents = events;\n  }\n\n}\n","\n<div class='demo-app'>\n\n  <div class='demo-app-sidebar'>\n    <div class='demo-app-sidebar-section'>\n      <h2>Instructions</h2>\n      <ul>\n        <li>Select dates and you will be prompted to create a new event</li>\n        <li>Drag, drop, and resize events</li>\n        <li>Click an event to delete it</li>\n      </ul>\n    </div>\n    <div class='demo-app-sidebar-section'>\n      <label>\n        <input\n          type='checkbox'\n          [checked]='calendarVisible'\n          (change)='handleCalendarToggle()'\n        />\n        toggle whole calendar\n      </label>\n    </div>\n    <div class='demo-app-sidebar-section'>\n      <label>\n        <input\n          type='checkbox'\n          [checked]='calendarOptions.weekends'\n          (change)='handleWeekendsToggle()'\n        />\n        toggle weekends\n      </label>\n    </div>\n    <div class='demo-app-sidebar-section'>\n      <h2>All Events ({{currentEvents.length}})</h2>\n      <ul>\n        <li *ngFor='let event of currentEvents'>\n          <b>{{event.startStr}}</b>\n          <i>{{event.title}}</i>\n        </li>\n      </ul>\n    </div>\n  </div>\n\n  <div class='demo-app-main'>\n    <full-calendar\n      *ngIf='calendarVisible'\n      [options]='calendarOptions'\n    ></full-calendar>\n  </div>\n\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FullCalendarModule } from '@fullcalendar/angular';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport listPlugin from '@fullcalendar/list';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport { AppComponent } from './app.component';\n\nFullCalendarModule.registerPlugins([\n  dayGridPlugin,\n  timeGridPlugin,\n  listPlugin,\n  interactionPlugin\n])\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FullCalendarModule // import the FullCalendar module! will make the FullCalendar component available\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { EventInput } from '@fullcalendar/angular';\n\nlet eventGuid = 0;\nconst TODAY_STR = new Date().toISOString().replace(/T.*$/, ''); // YYYY-MM-DD of today\n\nexport const INITIAL_EVENTS: EventInput[] = [\n  {\n    id: createEventId(),\n    title: 'All-day event',\n    start: TODAY_STR\n  },\n  {\n    id: createEventId(),\n    title: 'Timed event',\n    start: TODAY_STR + 'T12:00:00'\n  }\n];\n\nexport function createEventId() {\n  return String(eventGuid++);\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","\n// hack to get demo working in codepen\n// https://github.com/codesandbox/codesandbox-client/issues/2634#issuecomment-598104535\nimport 'core-js/proposals/reflect-metadata';\n\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}